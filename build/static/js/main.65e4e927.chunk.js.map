{"version":3,"sources":["components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/MainNav/MainNav.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","pages/Pages.js","App.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","api/—ÅonnectionsAPI/connectionsAPI.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-slice.js"],"names":["UserMenu","name","useSelector","getUserName","isLoggingOut","getIsLoading","dispatch","useDispatch","Box","sx","display","marginLeft","Button","onClick","logoutUser","variant","size","CircularProgress","AuthNav","getIsLoggedIn","to","MainNav","isLoggedIn","fixed","marginRight","PrivateRoute","children","PublicRoute","restricted","redirectTo","MainPage","lazy","LoginPage","RegisterPage","ContactsPage","Pages","fallback","path","element","replace","App","localStorageToken","getToken","isFetchingUser","getIsFetchingUser","useEffect","ConnectionsAPI","setToken","fetchUserInfo","Container","marginTop","authSlice","createSlice","initialState","user","email","token","isLoading","extraReducers","fulfilled","state","payload","pending","rejected","registerUser","toast","error","loginUser","unsetToken","info","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","auth","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","createAsyncThunk","_","thunkAPI","a","getUsersInfo","userInfo","data","rejectWithValue","message","registerResponse","loginResponse","logoutRepsonse","status","this","axiosInstance","post","get","id","delete","axios","create","baseURL","defaults","headers","common","Authorization","fetchContacts","getContacts","contacts","deleteContactById","addContact","contact","postContact","addedContact","phonebookSlice","filter","reducers","updateFilter","push","el","actions"],"mappings":"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","file":"static/js/main.65e4e927.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/auth/auth-operations\";\r\nimport { getUserName, getIsLoading } from \"../../redux/auth/auth-selectors\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction UserMenu() {\r\n  const name = useSelector(getUserName);\r\n  const isLoggingOut = useSelector(getIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", marginLeft: \"auto\" }}>\r\n      <p>{`Welcome ${name}`}</p>\r\n      <Button\r\n        onClick={() => {\r\n          dispatch(logoutUser());\r\n        }}\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        sx={{ marginLeft: \"10px\" }}\r\n      >\r\n        Logout\r\n      </Button>\r\n      {isLoggingOut && <CircularProgress />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","// import useSelector\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserMenu from \"../UserMenu/\";\r\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nfunction AuthNav() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return isLoggedIn ? (\r\n    <UserMenu />\r\n  ) : (\r\n    <Box sx={{ marginLeft: \"auto\" }}>\r\n      <NavLink to=\"login\">\r\n        {\" \"}\r\n        <Button variant=\"contained\">Login </Button>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"register\">\r\n        {\" \"}\r\n        <Button variant=\"contained\" sx={{ marginLeft: \"20px\" }}>\r\n          Register{\" \"}\r\n        </Button>\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport AuthNav from \"../AuthNav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction MainNav() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }} fixed>\r\n      <NavLink to=\"/\">\r\n        <Button variant=\"contained\" sx={{ marginRight: \"10px\" }}>\r\n          Main\r\n        </Button>\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink to=\"contacts\">\r\n          {\" \"}\r\n          <Button variant=\"contained\">Contacts </Button>\r\n        </NavLink>\r\n      )}\r\n\r\n      <AuthNav />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainNav;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction PrivateRoute({ children }) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default PrivateRoute;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction PublicRoute({ restricted = false, children, redirectTo = \"/\" }) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return shouldRedirect ? <Navigate to={redirectTo} /> : children;\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  restricted: PropTypes.bool,\r\n  redirectTo: PropTypes.string,\r\n};\r\nexport default PublicRoute;\r\n","import { Route, Routes, Navigate } from \"react-router\";\r\nimport PrivateRoute from \"../components/PrivateRoute/PrivateRoute\";\r\nimport PublicRoute from \"../components/PublicRoute/PublicRoute\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst MainPage = lazy(() => import(\"./MainPage\"));\r\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\r\nconst RegisterPage = lazy(() => import(\"./RegisterPage\"));\r\nconst ContactsPage = lazy(() => import(\"./ContactsPage\"));\r\n\r\nfunction Pages() {\r\n  return (\r\n    <Suspense fallback={<CircularProgress />}>\r\n      <Routes>\r\n        <Route\r\n          path=\"login\"\r\n          element={\r\n            <PublicRoute restricted redirectTo=\"/contacts\">\r\n              <LoginPage />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"register\"\r\n          element={\r\n            <PublicRoute restricted redirectTo=\"/contacts\">\r\n              <RegisterPage />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <PublicRoute>\r\n              <MainPage />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"contacts\"\r\n          element={\r\n            <PrivateRoute>\r\n              <ContactsPage />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Pages;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchUserInfo } from \"./redux/auth/auth-operations\";\r\nimport ConnectionsAPI from \"./api/—ÅonnectionsAPI/connectionsAPI\";\r\n\r\nimport MainNav from \"./components/MainNav\";\r\nimport Pages from \"./pages/Pages\";\r\nimport { getToken, getIsFetchingUser } from \"./redux/auth/auth-selectors\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction App() {\r\n  const localStorageToken = useSelector(getToken);\r\n  const isFetchingUser = useSelector(getIsFetchingUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    ConnectionsAPI.setToken(localStorageToken);\r\n    dispatch(fetchUserInfo());\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ marginTop: \"20px\" }} fixed>\r\n      {isFetchingUser ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <MainNav />\r\n          <Pages />\r\n          <ToastContainer />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport ConnectionsAPI from \"../../api/—ÅonnectionsAPI/connectionsAPI\";\r\nimport {\r\n  fetchUserInfo,\r\n  registerUser,\r\n  loginUser,\r\n  logoutUser,\r\n} from \"./auth-operations\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n  user: { name: \"\", email: \"\" },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingUser: true,\r\n  isLoading: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [fetchUserInfo.fulfilled]: (state, { payload }) => {\r\n      state.user.name = payload.name;\r\n      state.user.email = payload.email;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingUser = false;\r\n    },\r\n    [fetchUserInfo.pending]: (state) => {\r\n      state.isFetchingUser = true;\r\n    },\r\n    [fetchUserInfo.rejected]: (state) => {\r\n      state.isFetchingUser = false;\r\n    },\r\n    [registerUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [registerUser.fulfilled]: (state, { payload }) => {\r\n      ConnectionsAPI.setToken(payload.token);\r\n      state.token = payload.token;\r\n      state.user.name = payload.user.name;\r\n      state.user.email = payload.user.email;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [registerUser.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      toast.error(`Something went wrong, please try again`);\r\n    },\r\n    [loginUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loginUser.fulfilled]: (state, { payload }) => {\r\n      ConnectionsAPI.setToken(payload.token);\r\n      state.token = payload.token;\r\n      state.user.name = payload.user.name;\r\n      state.user.email = payload.user.email;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [loginUser.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      toast.error(\"Invalid credentials, try again\");\r\n    },\r\n    [logoutUser.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [logoutUser.fulfilled]: (state) => {\r\n      ConnectionsAPI.unsetToken();\r\n      state.token = null;\r\n      state.user.name = \"\";\r\n      state.user.email = \"\";\r\n      state.isLoggedIn = false;\r\n      state.isLoading = false;\r\n    },\r\n    [logoutUser.rejected]: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      toast.info(`Something went wrong, try again later ${payload}`);\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport auth from \"./auth/auth-slice\";\r\nimport phonebook from \"./phonebook/phonebook-slice\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: \"token\",\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook,\r\n    auth: persistReducer(authPersistConfig, auth),\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport ConnectionsAPI from \"../../api/—ÅonnectionsAPI/connectionsAPI\";\r\n\r\nexport const fetchUserInfo = createAsyncThunk(\r\n  \"auth/fetchUserInfo\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const userInfo = await ConnectionsAPI.getUsersInfo();\r\n      return userInfo.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      const registerResponse = await ConnectionsAPI.registerUser(data);\r\n      return registerResponse.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      const loginResponse = await ConnectionsAPI.loginUser(data);\r\n      return loginResponse.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  \"auth/logoutUser\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const logoutRepsonse = await ConnectionsAPI.logoutUser();\r\n      return logoutRepsonse.status;\r\n    } catch (error) {\r\n      thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import axios from \"axios\";\r\n\r\nclass ConnectionsAPI {\r\n  static axiosInstance = axios.create({\r\n    baseURL: \"https://connections-api.herokuapp.com\",\r\n  });\r\n\r\n  static setToken = (token) => {\r\n    this.axiosInstance.defaults.headers.common.Authorization = token;\r\n  };\r\n\r\n  static unsetToken = () => {\r\n    this.axiosInstance.defaults.headers.common.Authorization = \"\";\r\n  };\r\n\r\n  static getUsersInfo = () => {\r\n    return this.axiosInstance.get(\"/users/current\");\r\n  };\r\n\r\n  static registerUser(data) {\r\n    return this.axiosInstance.post(\"/users/signup\", data);\r\n  }\r\n\r\n  static loginUser(data) {\r\n    return this.axiosInstance.post(\"/users/login\", data);\r\n  }\r\n\r\n  static logoutUser() {\r\n    return this.axiosInstance.post(\"/users/logout\");\r\n  }\r\n\r\n  static getContacts() {\r\n    return this.axiosInstance.get(\"/contacts\");\r\n  }\r\n\r\n  static deleteContactById(id) {\r\n    return this.axiosInstance.delete(`/contacts/${id}`);\r\n  }\r\n\r\n  static postContact(data) {\r\n    return this.axiosInstance.post(\"/contacts\", data);\r\n  }\r\n}\r\n\r\nexport default ConnectionsAPI;\r\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nexport const getIsLoading = (state) => state.auth.isLoading;\r\n\r\nexport const getUserName = (state) => state.auth.user.name;\r\n\r\nexport const getToken = (state) => state.auth.token;\r\n\r\nexport const getIsFetchingUser = (state) => state.auth.isFetchingUser;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport ConnectionsAPI from \"../../api/—ÅonnectionsAPI/connectionsAPI\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"phonebook/FetchContacts\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const contacts = await ConnectionsAPI.getContacts();\r\n      return contacts.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContactById = createAsyncThunk(\r\n  \"phonebook/DeleteConctact\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      await ConnectionsAPI.deleteContactById(id);\r\n      return id;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"phonebook/AddContact\",\r\n  async (contact, thunkAPI) => {\r\n    try {\r\n      const addedContact = await ConnectionsAPI.postContact(contact);\r\n      return addedContact.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContactById,\r\n  addContact,\r\n} from \"./phonebook-operations\";\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: \"\",\r\n  error: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst phonebookSlice = createSlice({\r\n  name: \"phonebook\",\r\n  initialState,\r\n  reducers: {\r\n    updateFilter(state, { payload }) {\r\n      state.filter = payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [fetchContacts.fulfilled]: (state, { payload }) => {\r\n      state.contacts = payload;\r\n      state.isLoading = false;\r\n    },\r\n    [fetchContacts.rejected]: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      toast.error(\"Oops, something went wrong, please try again\");\r\n      state.error = payload;\r\n    },\r\n    [addContact.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n      state.contacts.push(payload);\r\n      state.isLoading = false;\r\n    },\r\n    [addContact.rejected]: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      toast.error(\"Oops, something went wrong, please try again\");\r\n      state.error = payload;\r\n    },\r\n    [deleteContactById.pending]: (state) => {\r\n      state.error = null;\r\n      state.isLoading = true;\r\n    },\r\n    [deleteContactById.fulfilled]: (state, { payload }) => {\r\n      state.contacts = state.contacts.filter((el) => el.id !== payload);\r\n      state.isLoading = false;\r\n    },\r\n    [deleteContactById.rejected]: (state, { payload }) => {\r\n      state.isLoading = false;\r\n      toast.error(\"Oops, something went wrong, please try again\");\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateFilter } = phonebookSlice.actions;\r\nexport default phonebookSlice.reducer;\r\n"],"sourceRoot":""}