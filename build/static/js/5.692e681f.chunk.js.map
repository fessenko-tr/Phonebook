{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactForm/initialState.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/isAlreadyAdded-function.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Notification/Notification.js","pages/ContactsPage/ContactsPage.js"],"names":["module","exports","initialState","name","number","getContacts","state","phonebook","contacts","getFilter","filter","getFilteredContacts","createSelector","filterValue","el","toLowerCase","includes","getIsContacts","length","isAlreadyAdded","array","newValue","some","ContactForm","useReducer","action","option","value","dispatchState","contactsArray","useSelector","dispatch","useDispatch","Box","sx","display","flexDirection","width","onSubmit","e","preventDefault","toast","info","addContact","component","TextField","marginBottom","label","type","id","pattern","title","required","onChange","currentTarget","Button","variant","endIcon","Filter","className","s","htmlFor","input","updateFilter","Contact","deleteFunction","listItem","marginLeft","onClick","ContactList","filteredContacts","deleteContactBtn","deleteContactById","contactsList","map","Notification","msg","ContactsPage","isContacts","useEffect","fetchContacts"],"mappings":"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","file":"static/js/5.692e681f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__35LUF\",\"label\":\"ContactForm_label__MHGdj\",\"input\":\"ContactForm_input__1aTiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2aC-z\",\"input\":\"Filter_input__V2LB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__daa9r\",\"listBtn\":\"Contact_listBtn__3-xPn\"};","const initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default initialState;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.phonebook.contacts;\r\n\r\nexport const getFilter = (state) => state.phonebook.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  getContacts,\r\n  getFilter,\r\n  (contacts, filterValue) => {\r\n    const filtered = contacts.filter((el) =>\r\n      el.name?.toLowerCase().includes(filterValue.toLowerCase())\r\n    );\r\n    return filtered;\r\n  }\r\n);\r\n\r\nexport const getIsContacts = createSelector(getContacts, (contacts) =>\r\n  contacts.length > 0 ? true : false\r\n);\r\n","const isAlreadyAdded = (array, newValue) =>\r\n  array.some((el) => el.name.toLowerCase() === newValue.toLowerCase());\r\n\r\nexport default isAlreadyAdded;\r\n","import React, { useReducer } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport initialState from \"./initialState\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\r\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport isAlreadyAdded from \"./isAlreadyAdded-function\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nfunction ContactForm() {\r\n  const [state, dispatchState] = useReducer(handleChange, initialState);\r\n  const contactsArray = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(state, action) {\r\n    const { option, value } = action;\r\n\r\n    if (option === \"reset\") {\r\n      return initialState;\r\n    }\r\n\r\n    return { ...state, [option]: value };\r\n  }\r\n\r\n  function submitNewContact(e) {\r\n    const { name } = state;\r\n\r\n    e.preventDefault();\r\n\r\n    if (isAlreadyAdded(contactsArray, name)) {\r\n      toast.info(`${name} has already been added`);\r\n      dispatchState({ option: \"reset\" });\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact(state));\r\n    dispatchState({ option: \"reset\" });\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{ display: \"flex\", flexDirection: \"column\", width: \"320px\" }}\r\n      onSubmit={submitNewContact}\r\n      component=\"form\"\r\n    >\r\n      <TextField\r\n        sx={{ marginBottom: \"20px\" }}\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={state.name}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n      <TextField\r\n        sx={{ marginBottom: \"20px\" }}\r\n        label=\"Number\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={state.number}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n\r\n      <Button variant=\"contained\" endIcon={<SaveIcon />} type=\"submit\">\r\n        Add contact\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFilter } from \"../../redux/phonebook/phonebook-slice\";\r\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateFilterFunc = ({ currentTarget }) =>\r\n    dispatch(updateFilter(currentTarget.value));\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={filterValue}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <p>{`${name}: ${number}`}</p>\r\n        <Button\r\n          sx={{ marginLeft: \"10px\" }}\r\n          endIcon={<DeleteIcon />}\r\n          onClick={() => {\r\n            deleteFunction(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </Box>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContactById } from \"../../redux/phonebook/phonebook-operations\";\r\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nfunction ContactList() {\r\n  const dispatch = useDispatch();\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  const deleteContactBtn = (id) => dispatch(deleteContactById(id));\r\n\r\n  const contactsList = filteredContacts.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contactsList}</ul>;\r\n}\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ msg }) {\r\n  return <p>{msg}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchContacts } from \"../../redux/phonebook/phonebook-operations\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport Filter from \"../../components/Filter\";\r\nimport ContactList from \"../../components/ContactList\";\r\nimport Notification from \"../../components/Notification\";\r\nimport { getIsContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nfunction ContactsPage() {\r\n  const isContacts = useSelector(getIsContacts);\r\n  const onNoAddedContacts = \"You seem not to have added any contacts yet\";\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {isContacts ? (\r\n        <>\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      ) : (\r\n        <Notification msg={onNoAddedContacts} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}