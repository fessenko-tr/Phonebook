{"version":3,"sources":["hooks/useForm.js","components/Register/initialState.js","components/Register/Register.js","pages/RegisterPage/RegisterPage.js"],"names":["useForm","initialState","dispatchAction","useState","form","setForm","dispatch","useDispatch","currentTarget","name","value","e","preventDefault","email","password","Register","isRegistring","useSelector","getIsLoading","registerUser","registerForm","handleChange","handleSubmit","Box","sx","marginTop","onSubmit","component","TextField","marginBottom","id","onChange","label","fullWidth","type","Button","variant","CircularProgress","RegisterPage"],"mappings":"iJAyBeA,IAtBf,SAAiBC,EAAcC,GAC7B,MAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAWC,cAgBjB,MAAO,CAACH,EAdR,YAA0C,IAAlBI,EAAiB,EAAjBA,cACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdL,EAAQ,2BACHD,GADE,kBAEJK,EAAOC,MAIZ,SAAsBC,GACpBA,EAAEC,iBACFN,EAASJ,EAAeE,IACxBC,EAAQJ,O,4HCjBGA,EAFM,CAAEQ,KAAM,GAAII,MAAO,GAAIC,SAAU,I,2CC2DvCC,MAjDf,WACE,IAAMC,EAAeC,YAAYC,KAEjC,EAAmDlB,YACjDC,EACAkB,KAFF,mBAAOC,EAAP,KAAqBC,EAArB,KAAmCC,EAAnC,KAKA,OACE,qCACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,UAAW,QAAUC,SAAUJ,EAAcK,UAAU,OAAlE,UACE,cAACC,EAAA,EAAD,CACEJ,GAAI,CAAEK,aAAc,QACpBnB,MAAOU,EAAaX,KACpBqB,GAAG,UACHrB,KAAK,OACLsB,SAAUV,EACVW,MAAM,OACNC,WAAS,IAGX,cAACL,EAAA,EAAD,CACEJ,GAAI,CAAEK,aAAc,QACpBnB,MAAOU,EAAaP,MACpBiB,GAAG,WACHrB,KAAK,QACLsB,SAAUV,EACVW,MAAM,QACNC,WAAS,IAEX,cAACL,EAAA,EAAD,CACEJ,GAAI,CAAEK,aAAc,QACpBnB,MAAOU,EAAaN,SACpBgB,GAAG,cACHrB,KAAK,WACLsB,SAAUV,EACVa,KAAK,WACLF,MAAM,WACNC,WAAS,IAEX,cAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYF,KAAK,SAAjC,yBAIDlB,GAAgB,cAACqB,EAAA,EAAD,QChDRC,MAJf,WACE,OAAO,cAAC,EAAD","file":"static/js/7.74ddfc72.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction useForm(initialState, dispatchAction) {\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange({ currentTarget }) {\r\n    const { name, value } = currentTarget;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch(dispatchAction(form));\r\n    setForm(initialState);\r\n  }\r\n\r\n  return [form, handleChange, handleSubmit];\r\n}\r\n\r\nexport default useForm;\r\n","const initialState = { name: \"\", email: \"\", password: \"\" };\r\n\r\nexport default initialState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getIsLoading } from \"../../redux/auth/auth-selectors\";\r\nimport { registerUser } from \"../../redux/auth/auth-operations\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport initialState from \"./initialState\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction Register() {\r\n  const isRegistring = useSelector(getIsLoading);\r\n\r\n  const [registerForm, handleChange, handleSubmit] = useForm(\r\n    initialState,\r\n    registerUser\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ marginTop: \"20px\" }} onSubmit={handleSubmit} component=\"form\">\r\n        <TextField\r\n          sx={{ marginBottom: \"20px\" }}\r\n          value={registerForm.name}\r\n          id=\"nameReg\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          label=\"name\"\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          sx={{ marginBottom: \"20px\" }}\r\n          value={registerForm.email}\r\n          id=\"emailReg\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          label=\"email\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          sx={{ marginBottom: \"20px\" }}\r\n          value={registerForm.password}\r\n          id=\"passwordReg\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          label=\"password\"\r\n          fullWidth\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Box>\r\n      {isRegistring && <CircularProgress />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import Register from \"../../components/Register\";\r\n\r\nfunction RegisterPage() {\r\n  return <Register />;\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}